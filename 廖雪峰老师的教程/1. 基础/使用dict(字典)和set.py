'''
查找和插入的速度极快，不会随着key的增加而变慢；
需要占用大量的内存，内存浪费多。
'''
d = {"1":"1"}
print(d)
print(d["1"])

# key是1 值是1     key类型可以不一致
d = {"1":1,"2":2,"3":3,4:'4'}
print(d["2"])

d[4] = "5"   # 修改
d[6] = '6'   # 增加

# print(d[7]) key不存在  则会报错

print('7' in d)  # 判断key是否存在字典中，避免不存在key时的报错

# 是通过dict提供的get()方法，如果key不存在，可以返回None，或者自己指定的value：
d.get("1")  # 
d.get("1",-1)

# 删除
d.pop("1") 

print(d)

'''
set和dict类似，也是一组key的集合，但不存储value。由于key不能重复，所以，在set中，没有重复的key。

要创建一个set，需要提供一个list作为输入集合：
'''
s = set([1,2,3,3])  #多余的元素会被过滤   顺序是无序的
s.add("1")  #同一集合可存入多种类型的元素
print(s)   # {1, 2, 3}